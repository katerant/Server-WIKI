variables:
  PACKAGE_VERSION: ${CI_COMMIT_TAG}
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/itAU/${PACKAGE_VERSION}" 

stages:          # List of stages for jobs, and their order of execution
  - build
  - test # test stage does not have any jobs in this example and will be skipped
  - upload
  - release

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  image: gcc
  rules:
    - if: $CI_COMMIT_TAG # only on tag
  script:
  # C++ cmake example with external build of libpqxx v 7.9.0
    - "export CC=gcc-12"
    - "export CXX=g++-12"

    - "git clone https://github.com/jtv/libpqxx.git"
    - "cd libpqxx"
    - "git checkout 7.9.0"
    - "./configure --disable-documentation --disable-shared --enable-static CXXFLAGS=-O3"
    - "make clean"
    - "make install"
    - "cd .."

    - "cp itAU/libs/*.so /usr/local/lib/."

    - "apt update --yes"
    - "apt install --yes cmake"

    - "[ ! -d \"build\" ] && mkdir build" # create dir if doesn't exist
    - "cd build"

    - "cmake -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_CXX_COMPILER=g++-12 .."
    - "cmake --build . --config Release --target all -j 4"
  artifacts:
    untracked: false
    when: on_success
    expire_in: 1 week
    paths:
      - build/Release/bin/ # save artefacts built in path
  cache:
    policy: pull-push
    unprotect: false
    untracked: true # cache all untracked (not the best practice)
    when: on_success

upload-job:
  stage: upload
  image: curlimages/curl:latest
  rules:
    - if: $CI_COMMIT_TAG
  script: 
    # push artefacts to package registry on gitlab
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file build/Release/bin/itAU "${PACKAGE_REGISTRY_URL}/itAU"
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file build/Release/bin/itAU_Agent "${PACKAGE_REGISTRY_URL}/itAU_Agent"
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file build/Release/bin/installItAu "${PACKAGE_REGISTRY_URL}/installItAu"
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file build/Release/bin/uninstallItAu "${PACKAGE_REGISTRY_URL}/uninstallItAu"
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file build/Release/bin/installItAuAgent "${PACKAGE_REGISTRY_URL}/installItAuAgent"
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file build/Release/bin/uninstallItAuAgent "${PACKAGE_REGISTRY_URL}/uninstallItAuAgent"

release-job:      # This job runs in the deploy stage.
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo # has to contain at least one line
  release:
    tag_name: "$CI_COMMIT_TAG"
    description: "Release v.$CI_COMMIT_TAG"
    assets:
      links:
        - name: "itAU"
          url: "${PACKAGE_REGISTRY_URL}/itAU" #link to file in package
        - name: "itAU_Agent"
          url: "${PACKAGE_REGISTRY_URL}/itAU_Agent"
        - name: "installItAu"
          url: "${PACKAGE_REGISTRY_URL}/installItAu"
        - name: "uninstallItAu"
          url: "${PACKAGE_REGISTRY_URL}/uninstallItAu"
        - name: "installItAuAgent"
          url: "${PACKAGE_REGISTRY_URL}/installItAuAgent"
        - name: "uninstallItAuAgent"
          url: "${PACKAGE_REGISTRY_URL}/uninstallItAuAgent"
